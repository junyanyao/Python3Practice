# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

def fib(n):
    a,b =0,1
    count =1
    while count <n:
        a,b =a, a+b
        count = count+1
    print(a)
    
def fib2(n):
    if n==0 or n==1:
        return n
    else:
        return fib2(n-1) + fib2(n-2)

def hanoi(a,b,c,n):
    if n==1:
        print(a,"->",c)
        
    else:
        hanoi(a,c,b,n-1)
        print(a,"=>",c)
        hanoi(b,a,c,n-1)
        

def bmi(weight, height):
    bmivalue= weight /height **2
    print('Your BMI is {0:.1f}'.format(bmivalue))
    if bmivalue< 18.5:
        print('too thin')
    elif bmivalue< 24:
        print('normal')
    elif bmivalue< 28:
        print('overweight')
    else:
        print('obesity')
        
for f in range(0, 301, 20):
    c =5/9*(f-32)
    print('{} f={:.0f} c'.format(f,c))

n =int(input())
while n !=1:
    if n %2==0:
        print('{}/2={}'.format(n,n//2))
        n //=2
    else:
        print('{}*3+1={}'.format(n,3*n+1))
        n = 3*n+1

apples = 100
for a in reversed(range(apples)):
    if a < 9:
        print("rest apples are less than 9")
        continue
        apples -= 9
        
        
apples = 100
while apples >= 1:
    if apples < 9:
        print("rest apples are less than 9")
        break
    apples -= 9
    
k = 50 
while k > 1: 
    print(k) 
    k = k // 2
    
s = 0
for i in range(1, 11):
     if i % 2 == 0:
        continue
     if i % 10 == 5:
        break
     s = s + i
print(s)


def my_power(x, n = 2):
    s = 1
    while n > 0:
      n -= 1
      s = s * x
    return s
my_power(-3)

def f(x):
     a = 7
     print(a + x)
a = 5
f(3)
print(a)


import requests
headers = {"User-Agent": "Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.83 Safari/535.11"}
re = requests.get('https://www.zhihu.com', headers = headers)
re.status_code


# -*- coding: utf-8 -*-
"""
Crawler

@author: Dazhuang
"""
import requests
from bs4 import BeautifulSoup
import re

s = 0
r = requests.get('https://book.douban.com/subject/25862578/comments/')
soup = BeautifulSoup(r.text, 'lxml')
pattern = soup.find_all('span', 'short')  # 之前此处标签为'p', 'comment-content'
for item in pattern:
    print(item.string)
pattern_s = re.compile('<span class="user-stars allstar(.*?) rating"')
p = re.findall(pattern_s, r.text)
for star in p:
    s += int(star)
print(s)


# -*- coding: utf-8 -*-
"""
Comments  parsing

@author: Dazhuang
"""
import requests, re, time
from bs4 import BeautifulSoup

count = 0
i = 0
s, count_s, count_del = 0, 0, 0
lst_stars = []
while count < 50:
    try:
        r = requests.get('https://book.douban.com/subject/1084336/comments/hot?p=' + str(i+1))
    except Exception as err:
        print(err)
        break
    soup = BeautifulSoup(r.text, 'lxml')
    comments = soup.find_all('span', 'short')
    pattern = re.compile('<span class="user-stars allstar(.*?) rating"')
    p = re.findall(pattern, r.text)
    for item in comments:
        count += 1
        if count > 50:
            count_del += 1     # count the number of comments more than 50 of the page 
        else:
            print(count, item.string)
    for star in p:
        lst_stars.append(int(star))
    time.sleep(5)    # delay request from douban's robots.txt
    i += 1
    for star in lst_stars[:-count_del]:   # calculate the rating star of 50 comments
        s += int(star) 
if count >= 50:
    print(s // (len(lst_stars)-count_del))


'''try recursion for factorial'''
def get_factorial(n):
    if n < 0:
        return -1
    elif n<2:
        return 1
    else:
        return n* get_factorial(n-1)

def get_loop_factorial(n):
    factorial =1
    for n in range(1,n+1):
        factorial = factorial * n
    return factorial

'''try recursion for sum of list'''

def listsum(n):
    thesum =0
    for i in n:
        thesum = thesum+ i
    return thesum

def listsume(n):
    if len(n) ==1:
        return n[0]
    else:
        return n[0]+listsume(n[1:])



'''use recursion to reverse string order'''
def rreverse(s):
    if s == "":
        return s
    else:
        return rreverse(s[1:]) + s[0]
    
print(rreverse('hello/world'))
    
#section 5 practice

'''Use for, .split(), and if to create a Statement that will print out words that start with 's':'''
st = 'Print only the words that start with s in this sentence'
for i in st.split():
    if i[0]=='s':
        print(i)
result= [i for i in st.split() if i[0]=='s']
        
'''Use range() to print all the even numbers from 0 to 10.'''
print(list(range(0,11,2)))
        

'''Use a List Comprehension to create a list of all numbers between 1 and 50 that are divisible by 3.'''

print([i for i in range(1,51) if i %3 ==0])

'''Go through the string below and if the length of a word is even print "even!"'''
st = 'Print every word in this sentence that has an even number of letters'


for i in st.split():
    if len(i) %2 ==0:
        print(i)
        
'''
Write a program that prints the integers from 1 to 100. But for multiples of three print "Fizz" instead of the number, 
and for the multiples of five print "Buzz". For numbers which are multiples of both three and five print "FizzBuzz".'''

for i in range(1,101):
    if i %3 ==0 and i%5==0:
        print('FizzBuzz')
    elif i %3==0:
        print('Fizz')
    elif i %5==0:
        print('Buzz')
    else:
        print(i)
    
        
st = 'Create a list of the first letters of every word in this string'
print([i[0] for i in st.split()])

'''LESSER OF TWO EVENS: Write a function that returns the lesser of two given numbers if both numbers are even, but returns the greater if one or both numbers are odd
lesser_of_two_evens(2,4) --> 2
lesser_of_two_evens(2,5) --> 5
'''

def lesser_of_two_evens(a,b):
    if a %2 ==0 and b %2==0:
        if a >b:
            return b
        else:
            return a
    else:
        if a>b:
            return a
        else:
            return b
    
    
# Check
lesser_of_two_evens(2,4)
    

# Check
lesser_of_two_evens(2,5)


'''

ANIMAL CRACKERS: Write a function takes a two-word string and returns True if both words begin with same letter
animal_crackers('Levelheaded Llama') --> True
animal_crackers('Crazy Kangaroo') --> False

'''
def animal_crackers(word):
    l = word.split()
    if l[0][0] == l[1][0]:
        return True
    else:
        return False
    
'''
MAKES TWENTY: Given two integers, return True if the sum of the integers is 20 or if one of the integers is 20. If not, return False
makes_twenty(20,10) --> True
makes_twenty(12,8) --> True
makes_twenty(2,3) --> False
'''
def makes_twenty(num1, num2):
    return num1+num2==20 or num1 ==20 or num2==20


makes_twenty(20,10)
makes_twenty(12,8)
makes_twenty(2,3)

'''
OLD MACDONALD: Write a function that capitalizes the first and fourth letters of a name¶
old_macdonald('macdonald') --> MacDonald
Note: 'macdonald'.capitalize() returns 'Macdonald
'''


